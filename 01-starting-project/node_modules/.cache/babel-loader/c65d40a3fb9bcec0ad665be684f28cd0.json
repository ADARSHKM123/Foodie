{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADARSH\\\\Documents\\\\01-starting-project (2)\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from './Context';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const exited = state.ite;\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartstate, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartstate.items,\n    totalAmount: cartstate.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"/kFrQ/P4QPlxauMCp+TPaNGFJgo=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/ADARSH/Documents/01-starting-project (2)/01-starting-project/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","exited","ite","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartstate","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,WAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AAE3B,UAAMC,MAAM,GAAGH,KAAK,CAACI,GAArB;AACI,UAAMC,YAAY,GAAGL,KAAK,CAACH,KAAN,CAAYS,MAAZ,CAAmBL,MAAM,CAACM,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GACpBR,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACM,IAAP,CAAYE,KAAZ,GAAoBR,MAAM,CAACM,IAAP,CAAYG,MADxD;AAEA,WAAO;AACHb,MAAAA,KAAK,EAAEQ,YADJ;AAEHP,MAAAA,WAAW,EAAEU;AAFV,KAAP;AAIH;;AACD,SAAOZ,gBAAP;AACH,CAbD;;AAeA,MAAMe,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCnB,UAAU,CAC9CI,WAD8C,EAE9CH,gBAF8C,CAAlD;;AAKA,QAAMmB,oBAAoB,GAAIR,IAAD,IAAU;AACnCO,IAAAA,kBAAkB,CAAC;AAAEZ,MAAAA,IAAI,EAAE,KAAR;AAAeK,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMS,yBAAyB,GAAIC,EAAD,IAAQ;AACtCH,IAAAA,kBAAkB,CAAC;AAAEZ,MAAAA,IAAI,EAAE,QAAR;AAAkBe,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAChBrB,IAAAA,KAAK,EAAEgB,SAAS,CAAChB,KADD;AAEhBC,IAAAA,WAAW,EAAEe,SAAS,CAACf,WAFP;AAGhBqB,IAAAA,OAAO,EAAEJ,oBAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1BD;;GAAMV,Y;;KAAAA,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import CartContext from './Context'\r\nimport { useReducer } from 'react'\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0,\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n    if (action.type === 'ADD') {\r\n\r\n    const exited = state.ite    \r\n        const updatedItems = state.items.concat(action.item);\r\n        const updatedTotalAmount =\r\n            state.totalAmount + action.item.price * action.item.amount\r\n        return {\r\n            items: updatedItems,  \r\n            totalAmount: updatedTotalAmount,\r\n        }\r\n    }\r\n    return defaultCartState\r\n}\r\n\r\nconst CartProvider = (props) => {\r\n    const [cartstate, dispatchCartAction] = useReducer(\r\n        cartReducer,\r\n        defaultCartState\r\n    )\r\n\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({ type: 'ADD', item: item })\r\n    }\r\n\r\n    const removeItemFromCartHandler = (id) => {\r\n        dispatchCartAction({ type: 'REMOVE', id: id })\r\n    }\r\n\r\n    const cartContext = {\r\n        items: cartstate.items,\r\n        totalAmount: cartstate.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler,\r\n    }\r\n\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\me\\\\design\\\\0001 React Files\\\\Foodie\\\\01-starting-project\\\\src\\\\components\\\\Cart\\\\checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from './checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isSixchar = value => value.trim().length !== 6;\n\nconst Checkout = props => {\n  _s();\n\n  const [formValidation, setformValidation] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true\n  });\n  const nameRef = useRef();\n  const streetRef = useRef();\n  const postalcodeRef = useRef();\n  const cityRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const entered_Name = nameRef.current.value;\n    const entered_Street = streetRef.current.value;\n    const entered_City = cityRef.current.value;\n    const entered_Postal = postalcodeRef.current.value;\n    console.log(entered_Name);\n    const enteredNameValid = !isEmpty(entered_Name);\n    const enteredStreetValid = !isEmpty(entered_Street);\n    const enteredCityeValid = !isEmpty(entered_City);\n    const enteredPostalCodeValid = !isSixchar(entered_Postal);\n    setformValidation({\n      name: enteredNameValid,\n      postal: enteredPostalCodeValid,\n      street: enteredStreetValid,\n      city: enteredCityeValid\n    });\n    const formValid = enteredNameValid && enteredStreetValid && enteredCityeValid && enteredPostalCodeValid;\n\n    if (!formValid) {}\n  };\n\n  const nameControlClasses = `${classes.control} ${formValidation.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formValidation.street ? '' : classes.invalid}`;\n  const postalControlClasses = `${classes.control} ${formValidation.postal ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formValidation.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), !formValidation.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), !formValidation.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid Street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalcodeRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), !formValidation.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid Postal Code!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), !formValidation.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid City Name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.Oncancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"YrQAL7gq6Mk6QKVxucB2fsU93S4=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/me/design/0001 React Files/Foodie/01-starting-project/src/components/Cart/checkout.js"],"names":["classes","useRef","useState","isEmpty","value","trim","isSixchar","length","Checkout","props","formValidation","setformValidation","name","street","postal","city","nameRef","streetRef","postalcodeRef","cityRef","confirmHandler","event","preventDefault","entered_Name","current","entered_Street","entered_City","entered_Postal","console","log","enteredNameValid","enteredStreetValid","enteredCityeValid","enteredPostalCodeValid","formValid","nameControlClasses","control","invalid","streetControlClasses","postalControlClasses","cityControlClasses","form","actions","Oncancel","submit"],"mappings":"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","sourcesContent":["import classes from './checkout.module.css';\r\nimport { useRef,useState } from 'react';\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isSixchar = value => value.trim().length !== 6;\r\n\r\n\r\nconst Checkout = (props) => {\r\n\r\n  const [formValidation, setformValidation] = useState({\r\n    name:true,\r\n    street:true,\r\n    postal:true,\r\n    city:true,\r\n  })\r\n\r\n  const nameRef = useRef();\r\n  const streetRef = useRef();\r\n  const postalcodeRef = useRef();\r\n  const cityRef = useRef();\r\n\r\n  \r\n\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n  const entered_Name = nameRef.current.value\r\n  const entered_Street = streetRef.current.value\r\n  const entered_City = cityRef.current.value\r\n  const entered_Postal = postalcodeRef.current.value\r\n\r\n   console.log(entered_Name);\r\n  \r\n  const enteredNameValid = !isEmpty(entered_Name);\r\n  const enteredStreetValid = !isEmpty(entered_Street);\r\n  const enteredCityeValid = !isEmpty(entered_City);\r\n  const enteredPostalCodeValid = !isSixchar(entered_Postal);\r\n\r\n  setformValidation({\r\n    name:enteredNameValid,\r\n    postal:enteredPostalCodeValid,\r\n    street:enteredStreetValid,\r\n    city:enteredCityeValid,\r\n  })\r\n\r\n  \r\n  const formValid = enteredNameValid && enteredStreetValid && enteredCityeValid && enteredPostalCodeValid;\r\n\r\n  if(!formValid){\r\n  \r\n  }\r\n\r\n \r\n  };\r\n\r\n  \r\n  const nameControlClasses = `${classes.control} ${formValidation.name? '' : classes.invalid}`;\r\n  const streetControlClasses = `${classes.control} ${formValidation.street? '' : classes.invalid}`;\r\n  const postalControlClasses = `${classes.control} ${formValidation.postal? '' : classes.invalid}`;\r\n  const cityControlClasses = `${classes.control} ${formValidation.city? '' : classes.invalid}`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' ref={nameRef} />\r\n        {!formValidation.name && <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref={streetRef} />\r\n        {!formValidation.street && <p>Please enter a valid Street!</p>}\r\n      </div>\r\n      <div className={postalControlClasses}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref={postalcodeRef}/>\r\n        {!formValidation.postal && <p>Please enter a valid Postal Code!</p>}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref={cityRef}/>\r\n        {!formValidation.city && <p>Please enter a valid City Name!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.Oncancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\me\\\\design\\\\0001 React Files\\\\Foodie\\\\01-starting-project\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport Model from '../UI/Model';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/Context';\nimport CartItem from './CartItem';\nimport Checkout from './checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartctx = useContext(CartContext);\n  const [isCheckout, setisCheckout] = useState(false);\n  const [isSubmitting, setisSubmitting] = useState(false);\n  const [DidSubmit, setDidSubmit] = useState(false);\n  const totalamount = `${cartctx.totalAmount.toFixed(2)}`;\n  const hasItem = cartctx.items.length > 0; // const numberOfCartItems= cartctx.items.reduce((acc,item)=>  {\n  //   return acc + item.amount\n  // },0);\n\n  const cartItemRemoveHandler = id => {\n    cartctx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartctx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setisCheckout(true);\n  };\n\n  const submitDataHandler = async userData => {\n    setisSubmitting(true);\n    await fetch('https://add-list-36a72-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartctx.items\n      })\n    });\n    setDidSubmit(true);\n    setisSubmitting(false); // const data =await response.json();\n    // console.log(data);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartctx.items.map((item, i) => /*#__PURE__*/_jsxDEV(CartItem, {\n      id: item.id,\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }, this);\n\n  const modalAction = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), hasItem && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalamount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      Onconfirm: submitDataHandler,\n      Oncancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 22\n    }, this), !isCheckout && modalAction]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 29\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Model, {\n    onClosing: props.onClose\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"ouQZbke/hPxCWN+2WLVjRe2EoKU=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/me/design/0001 React Files/Foodie/01-starting-project/src/components/Cart/Cart.js"],"names":["React","useContext","useState","Model","classes","CartContext","CartItem","Checkout","Cart","props","cartctx","isCheckout","setisCheckout","isSubmitting","setisSubmitting","DidSubmit","setDidSubmit","totalamount","totalAmount","toFixed","hasItem","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitDataHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","cartItems","map","i","name","price","bind","modalAction","actions","onClose","button","cartModalContent","total"],"mappings":"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","sourcesContent":["import React, { useContext,useState } from 'react';\r\nimport Model from '../UI/Model';\r\nimport classes from './Cart.module.css';\r\nimport CartContext from '../../store/Context';\r\nimport CartItem from './CartItem';\r\nimport Checkout from './checkout';\r\n\r\n\r\n\r\nconst Cart = (props) => {\r\n  \r\n  const cartctx = useContext(CartContext);\r\n  const [isCheckout, setisCheckout] = useState(false);\r\n  const [isSubmitting, setisSubmitting] = useState(false);\r\n  const [DidSubmit, setDidSubmit] = useState(false);\r\n\r\n  const totalamount = `${cartctx.totalAmount.toFixed(2)}`\r\n  const hasItem = cartctx.items.length >0;\r\n    // const numberOfCartItems= cartctx.items.reduce((acc,item)=>  {\r\n  //   return acc + item.amount\r\n  // },0);\r\n\r\n  const cartItemRemoveHandler=id=>{\r\n  cartctx.removeItem(id);\r\n  };\r\n  \r\n  const cartItemAddHandler=item=>{\r\n    cartctx.addItem({...item,amount:1})\r\n  };\r\n\r\n  const orderHandler=()=>{\r\n    setisCheckout(true);\r\n  }\r\n\r\n  const submitDataHandler=async (userData)=>{\r\n    setisSubmitting(true);\r\n    await fetch('https://add-list-36a72-default-rtdb.firebaseio.com/orders.json',{\r\n      method:'POST',\r\n      body:JSON.stringify({\r\n        user:userData,\r\n        orderedItems:cartctx.items,\r\n      })\r\n    })\r\n    setDidSubmit(true);\r\n    setisSubmitting(false);\r\n    // const data =await response.json();\r\n    // console.log(data);\r\n  }\r\n\r\n  const cartItems = <ul className={classes['cart-items']}>\r\n    {cartctx.items.map((item,i)=> \r\n    <CartItem\r\n     key={item.id} \r\n     id={item.id}\r\n     name={item.name} \r\n     amount={item.amount} \r\n     price={item.price}\r\n    onRemove={cartItemRemoveHandler.bind(null,item.id)}\r\n    onAdd={cartItemAddHandler.bind(null,item)}\r\n      />)}</ul>\r\n\r\n\r\n      const modalAction = \r\n        <div className={classes.actions}>\r\n        <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n       {hasItem && <button className={classes.button} onClick={orderHandler}>Order</button>}\r\n      </div>\r\n   \r\n   const cartModalContent = <React.Fragment>\r\n {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalamount}</span>\r\n      </div>\r\n      {isCheckout && <Checkout Onconfirm={submitDataHandler} Oncancel={props.onClose}/>}\r\n      {!isCheckout && modalAction}\r\n   </React.Fragment>\r\n\r\n  return ( \r\n\r\n    <Model onClosing={props.onClose}>\r\n     \r\n    </Model>\r\n   );\r\n}\r\n \r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}
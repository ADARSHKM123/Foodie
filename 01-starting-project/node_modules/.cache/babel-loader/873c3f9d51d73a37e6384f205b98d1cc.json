{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADARSH\\\\Documents\\\\01-starting-project (2)\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./Context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.item.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      total\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartstate, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: [],\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"/kFrQ/P4QPlxauMCp+TPaNGFJgo=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/ADARSH/Documents/01-starting-project (2)/01-starting-project/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","item","concat","updatedTotalAmount","price","amount","total","CartProvider","props","cartstate","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,WAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAC;AACrBC,EAAAA,KAAK,EAAC,EADe;AAErBC,EAAAA,WAAW,EAAC;AAFS,CAAvB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAClC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AAC3B,UAAMC,YAAY,GAAGH,KAAK,CAACI,IAAN,CAAWC,MAAX,CAAkBJ,MAAM,CAACG,IAAzB,CAArB;AACA,UAAME,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYG,KAAZ,GAAoBN,MAAM,CAACG,IAAP,CAAYI,MAA/E;AACA,WAAO;AACLX,MAAAA,KAAK,EAACM,YADD;AAELM,MAAAA;AAFK,KAAP;AAIG;;AACH,SAAOb,gBAAP;AACC,CAVD;;AAaA,MAAMc,YAAY,GAACC,KAAK,IAAE;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAAlD;;AAIE,QAAMkB,oBAAoB,GAAEV,IAAD,IAAQ;AACjCS,IAAAA,kBAAkB,CAAC;AAACX,MAAAA,IAAI,EAAC,KAAN;AAAYE,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMW,yBAAyB,GAAGC,EAAD,IAAM;AACrCH,IAAAA,kBAAkB,CAAC;AAACX,MAAAA,IAAI,EAAC,QAAN;AAAgBc,MAAAA,EAAE,EAACA;AAAnB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAClBpB,IAAAA,KAAK,EAAC,EADY;AAElBC,IAAAA,WAAW,EAAC,CAFM;AAGlBoB,IAAAA,OAAO,EAACJ,oBAHU;AAIlBK,IAAAA,UAAU,EAACJ;AAJO,GAApB;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACMN,KAAK,CAACS;AADZ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1BD;;GAAMV,Y;;KAAAA,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./Context\"\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultCartState={\r\n  items:[],\r\n  totalAmount:0\r\n};\r\n\r\nconst cartReducer = (state,action)=>{\r\n  if(action.type === 'ADD'){\r\nconst updatedItems = state.item.concat(action.item);\r\nconst updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\nreturn {\r\n  items:updatedItems,\r\n  total\r\n}; \r\n  }\r\nreturn defaultCartState;\r\n}\r\n\r\n\r\nconst CartProvider=props=>{\r\nconst [cartstate, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\r\n\r\n \r\n\r\n  const addItemToCartHandler=(item)=>{\r\n    dispatchCartAction({type:'ADD',item:item})\r\n  };\r\n\r\n  const removeItemFromCartHandler =(id)=>{\r\n    dispatchCartAction({type:'REMOVE', id:id});\r\n  };\r\n\r\n  const cartContext = {\r\n    items:[],\r\n    totalAmount:0,\r\n    addItem:addItemToCartHandler ,\r\n    removeItem:removeItemFromCartHandler,\r\n\r\n  }\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n         {props.children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}